# version: "3.8"
# services:
#   redis-queue:
#     image: redis:latest
#     ports:
#       - "6379:6379"

#   users-api:
#     build:
#       context: ./users-api
#     environment:
#       SERVER_PORT: 8083
#       JWT_SECRET: myfancysecret
#     ports:
#       - "8083:8083"
#     depends_on:
#       - redis-queue

#   auth-api:
#     build:
#       context: ./auth-api
#     environment:
#       AUTH_API_PORT: 8081
#       JWT_SECRET: myfancysecret
#       USERS_API_ADDRESS: http://users-api:8083
#     ports:
#       - "8081:8081"
#     depends_on:
#       - users-api

#   todos-api:
#     build:
#       context: ./todos-api
#     environment:
#       TODO_API_PORT: 8082
#       JWT_SECRET: myfancysecret
#       REDIS_HOST: redis-queue
#       REDIS_PORT: 6379
#       REDIS_CHANNEL: log_channel
#     ports:
#       - "8082:8082"
#     depends_on:
#       - redis-queue
#       - auth-api

#   log-message-processor:
#     build:
#       context: ./log-message-processor
#     environment:
#       REDIS_HOST: redis-queue
#       REDIS_PORT: 6379
#       REDIS_CHANNEL: log_channel
#     depends_on:
#       - redis-queue

#   frontend:
#     build:
#       context: ./frontend
#     environment:
#       PORT: 8080
#       AUTH_API_ADDRESS: http://auth-api:8081
#       TODOS_API_ADDRESS: http://todos-api:8082
#     ports:
#       - "8080:8080"
#     depends_on:
#       - auth-api
#       - todos-api




#------------------------------------------------------------

#testing traefik setup

version: "3.8"

services:
  traefik:
    image: traefik:v2.5
    container_name: traefik
    command:
      - --api.insecure=true
      - --providers.docker
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.email=your-email@example.com
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.yourdomain.com`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"

  redis-queue:
    image: redis:latest
    ports:
      - "6379:6379"

  users-api:
    build:
      context: ./users-api
    environment:
      SERVER_PORT: 8083
      JWT_SECRET: myfancysecret
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users-api.rule=Host(`users.yourdomain.com`) || Host(`yourdomain.com`) && PathPrefix(`/api/users`)"
      - "traefik.http.routers.users-api.entrypoints=websecure"
      - "traefik.http.routers.users-api.tls.certresolver=myresolver"
    depends_on:
      - redis-queue

  auth-api:
    build:
      context: ./auth-api
    environment:
      AUTH_API_PORT: 8081
      JWT_SECRET: myfancysecret
      USERS_API_ADDRESS: http://users-api:8083
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-api.rule=Host(`auth.yourdomain.com`) || Host(`yourdomain.com`) && PathPrefix(`/api/auth`)"
      - "traefik.http.routers.auth-api.entrypoints=websecure"
      - "traefik.http.routers.auth-api.tls.certresolver=myresolver"
    depends_on:
      - users-api

  todos-api:
    build:
      context: ./todos-api
    environment:
      TODO_API_PORT: 8082
      JWT_SECRET: myfancysecret
      REDIS_HOST: redis-queue
      REDIS_PORT: 6379
      REDIS_CHANNEL: log_channel
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todos-api.rule=Host(`todos.yourdomain.com`) || Host(`yourdomain.com`) && PathPrefix(`/api/todos`)"
      - "traefik.http.routers.todos-api.entrypoints=websecure"
      - "traefik.http.routers.todos-api.tls.certresolver=myresolver"
    depends_on:
      - redis-queue
      - auth-api

  log-message-processor:
    build:
      context: ./log-message-processor
    environment:
      REDIS_HOST: redis-queue
      REDIS_PORT: 6379
      REDIS_CHANNEL: log_channel
    depends_on:
      - redis-queue

  frontend:
    build:
      context: ./frontend
    environment:
      PORT: 8080
      AUTH_API_ADDRESS: http://auth-api:8081
      TODOS_API_ADDRESS: http://todos-api:8082
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`yourdomain.com`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
    depends_on:
      - auth-api
      - todos-api